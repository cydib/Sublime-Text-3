{
	"folder_history":
	[
		"/F/code/c++",
		"/F/code/java/src",
		"/F/code/sdk",
		"/F/code/py",
		"/F/code",
		"/E/jsProject",
		"/E/pyProject",
		"/E/javaProject",
		"/D/project/ifaas-platform"
	],
	"last_version": 3176,
	"last_window_id": 27,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 652.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"re",
						"re\tmodule"
					],
					[
						"im",
						"imread\tfunction"
					],
					[
						"m",
						"missed1"
					],
					[
						"ca",
						"cal_IoU\tfunction"
					],
					[
						"in",
						"incorrect\tstatement"
					],
					[
						"bb",
						"bbox\tstatement"
					],
					[
						"c",
						"calc\tstatement"
					],
					[
						"b",
						"bbox"
					],
					[
						"va",
						"value"
					],
					[
						"img",
						"imgFile\tparam"
					],
					[
						"n",
						"ndetect\tstatement"
					],
					[
						"v",
						"values"
					],
					[
						"num",
						"numpy\tmodule"
					],
					[
						"vo",
						"voc_eval\tfunction"
					],
					[
						"str",
						"str1"
					],
					[
						"f",
						"findall"
					],
					[
						"time",
						"time2\tstatement"
					],
					[
						"s",
						"strftime\tfunction"
					],
					[
						"tie",
						"time1\tstatement"
					],
					[
						"st",
						"str1\tstatement"
					],
					[
						"d",
						"dirname\tstatement"
					],
					[
						"get",
						"getbbox\tfunction"
					],
					[
						"cac",
						"cachefile\tstatement"
					],
					[
						"li",
						"lines\tstatement"
					],
					[
						"so",
						"sortresult"
					],
					[
						"R",
						"Rect"
					],
					[
						"Re",
						"Result"
					],
					[
						"ba",
						"base_persons"
					],
					[
						"si",
						"simil"
					],
					[
						"base",
						"base_image"
					],
					[
						"pe",
						"persons"
					],
					[
						"ge",
						"get_mAp\tfunction"
					],
					[
						"xml",
						"xmlPath"
					],
					[
						"det",
						"detPath"
					],
					[
						"class",
						"classes"
					],
					[
						"pr",
						"print\tfunction"
					],
					[
						"xm",
						"xmlPath\tparam"
					],
					[
						"de",
						"detPath\tparam"
					],
					[
						"cl",
						"classes\tparam"
					],
					[
						"x",
						"xml"
					],
					[
						"us",
						"use_o7_metric\tparam"
					],
					[
						"fla",
						"float\tmodule"
					],
					[
						"cum",
						"cumsum\tfunction"
					],
					[
						"ov",
						"ovmax\tstatement"
					],
					[
						"int",
						"inters\tstatement"
					],
					[
						"min",
						"minimum\tinstance"
					],
					[
						"BB",
						"BBGT\tstatement"
					],
					[
						"as",
						"astyp1e"
					],
					[
						"ima",
						"image_ids\tstatement"
					],
					[
						"di",
						"ditticult"
					],
					[
						"np",
						"npos\tstatement"
					],
					[
						"fo",
						"format"
					],
					[
						"pa",
						"parse_rec\tfunction"
					],
					[
						"spl",
						"splitext\tfunction"
					],
					[
						"is",
						"isfile\tfunction"
					],
					[
						"su",
						"sum\tfunction"
					],
					[
						"max",
						"maximum\tinstance"
					],
					[
						"usr",
						"use_o7_metric"
					],
					[
						"ob",
						"object"
					],
					[
						"find",
						"findall\tfunction"
					],
					[
						"Ele",
						"ElementTree\tmodule"
					],
					[
						"g",
						"getVercode\tfunction"
					],
					[
						"B",
						"BeautifulSoup\tclass"
					],
					[
						"r",
						"request\tstatement"
					],
					[
						"fil",
						"findall\tfunction"
					],
					[
						"test",
						"test_case"
					],
					[
						"a",
						"a_list\tstatement"
					],
					[
						"dum",
						"dumps\tfunction"
					],
					[
						"data",
						"data1\tstatement"
					],
					[
						"h",
						"headers1"
					],
					[
						"du",
						"dumps\tfunction"
					],
					[
						"H",
						"HTMLSession\tclass"
					],
					[
						"i",
						"import\tkeyword"
					],
					[
						"p",
						"pedestrian"
					],
					[
						"per",
						"person"
					],
					[
						"te",
						"testb"
					],
					[
						"fi",
						"first"
					],
					[
						"end",
						"endl"
					],
					[
						"inc",
						"incorrect2\tstatement"
					],
					[
						"co",
						"correct\tstatement"
					],
					[
						"read",
						"readline\tfunction"
					],
					[
						"age",
						"age_group"
					],
					[
						"inp",
						"input_and_output"
					],
					[
						"sot",
						"sorted\tfunction"
					],
					[
						"or",
						"origen\tstatement"
					],
					[
						"o",
						"origen\tstatement"
					],
					[
						"gen",
						"gender"
					],
					[
						"file",
						"filename"
					],
					[
						"sh",
						"showAllFiles"
					],
					[
						"con",
						"const"
					],
					[
						"e",
						"e"
					],
					[
						"fa",
						"face_gender_model_path"
					],
					[
						"set",
						"set_face_gender_model"
					],
					[
						"ar",
						"arctern"
					],
					[
						"face",
						"face_det_model_path"
					],
					[
						"T",
						"True\tkeyword"
					],
					[
						"th",
						"thread_\tstatement"
					],
					[
						"t",
						"thread"
					],
					[
						"ex",
						"except"
					],
					[
						"dir",
						"dir_detector"
					],
					[
						"Fe",
						"feTime"
					],
					[
						"ip",
						"ipoint2"
					],
					[
						"cou",
						"ccount"
					],
					[
						"ra",
						"range\tfunction"
					],
					[
						"he",
						"headers"
					],
					[
						"sys",
						"system〔function〕"
					],
					[
						"IF",
						"IFaceRecSDK_FaceClear"
					],
					[
						"IFaceRecSDK_S",
						"IFaceRecSDK_SearcherDestroy"
					],
					[
						"arg",
						"arg_pagesize"
					],
					[
						"se",
						"self〔argument〕"
					],
					[
						"self",
						"self,a,b"
					],
					[
						"if",
						"ifmain\tif __name__ == '__main__'"
					],
					[
						"for",
						"for\tfor (…) {…}"
					],
					[
						"arr",
						"arr〔variable〕"
					],
					[
						"w",
						"webdriver"
					],
					[
						"l",
						"longest"
					],
					[
						"ne",
						"newStr2"
					],
					[
						"new",
						"newStr〔variable〕"
					],
					[
						"S",
						"System"
					],
					[
						"u",
						"upgrade_log"
					],
					[
						"tesT",
						"test2"
					],
					[
						"tes",
						"test2〔variable〕"
					],
					[
						"bas",
						"base\tTag"
					],
					[
						"backgroundc",
						"background-color"
					],
					[
						"onc",
						"onclick\tAttr"
					],
					[
						"fu",
						"function"
					]
				]
			},
			"build_system_choices":
			[
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/Python-Virtualenv.sublime-build",
							""
						],
						[
							"Packages/User/shellR.sublime-build",
							""
						]
					],
					[
						"Packages/User/Python-Virtualenv.sublime-build",
						""
					]
				],
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shellR.sublime-build",
							""
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/C&C++R.sublime-build",
							""
						],
						[
							"Packages/User/C&C++R.sublime-build",
							"g++ Compile"
						],
						[
							"Packages/User/C&C++R.sublime-build",
							"g++ Run"
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shellR.sublime-build",
							""
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/C++.sublime-build",
							""
						],
						[
							"Packages/User/C++.sublime-build",
							"g++ Compile"
						],
						[
							"Packages/User/C++.sublime-build",
							"g++ Run"
						],
						[
							"Packages/User/javascript.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/C++.sublime-build",
							""
						],
						[
							"Packages/User/C++.sublime-build",
							"g++ Compile"
						],
						[
							"Packages/User/C++.sublime-build",
							"g++ Run"
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/javascript.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/Java/Ant.sublime-build",
							""
						],
						[
							"Packages/Java/JavaC.sublime-build",
							""
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/javaR.sublime-build",
							""
						],
						[
							"Packages/User/javascript.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/User/javaR.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Java/Ant.sublime-build",
							""
						],
						[
							"Packages/Java/JavaC.sublime-build",
							""
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/javaR.sublime-build",
							""
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/User/javaR.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Java/Ant.sublime-build",
							""
						],
						[
							"Packages/Java/JavaC.sublime-build",
							""
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/javaR.sublime-build",
							""
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shellR.sublime-build",
							""
						]
					],
					[
						"Packages/User/javaR.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Java/Ant.sublime-build",
							""
						],
						[
							"Packages/Java/JavaC.sublime-build",
							""
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/javascript.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/Java/JavaC.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/javascript.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/shell2.sublime-build",
							""
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/javascript.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/User/javascript.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/User/jsR.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shellR.sublime-build",
							""
						]
					],
					[
						"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/User/shell.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/shell2.sublime-build",
							""
						]
					],
					[
						"Packages/User/shell2.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 490.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"subsh",
						"SublimeREPL: Shell"
					],
					[
						"prv",
						"PackageResourceViewer: Open Resource"
					],
					[
						"instalk",
						"Package Control: Install Package"
					]
				],
				"width": 609.0
			},
			"console":
			{
				"height": 130.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"//192.168.2.243/e/intellif/SDK/Windows/win32/test/benchmark/predictor/PredictorTest.cpp",
				"/C/Users/intellif/AppData/Roaming/Sublime Text 3/Packages/Anaconda/Anaconda.sublime-settings",
				"/C/Users/intellif/Desktop/baiduPan.py",
				"/F/SDK/Windows/v2.1.2/rc1/test/benchmark/build64.bat",
				"/F/Alg/screenshot.py",
				"/F/Alg/screenshot - 副本.py",
				"/F/Alg/Iou.py",
				"/F/Alg/hkperson.py",
				"/D/Algsamples/calc/1/calc/alg - 副本.py",
				"/C/Users/intellif/Desktop/testfor.py",
				"/D/Algsamples/08.07-08.08getlmg3/08.07-08.08getlmg3/age/adult/readXml.py",
				"/F/SDK/Windows/v2.1.2/rc1/run64.bat",
				"/D/Algsamples/calc/1/calc/alg.py",
				"/D/Algsamples/calc/alg.py",
				"/C/Users/intellif/Desktop/Sanic.py",
				"/F/code/c++/sort.c",
				"/F/SDK/Windows/v2.1.2/rc1/test/benchmark/tracker/TrackerTest.cpp",
				"/C/Users/intellif/Desktop/12.py",
				"/C/Users/intellif/Desktop/Temporary/arctern_manager.h",
				"/F/Alg/drawing.py",
				"/D/Algsamples/calc/1/calc/alg - 副本 (2).py",
				"/F/code/C/CProject/CProject/width.c",
				"/F/code/C/CProject/CProject/varwid.c",
				"/D/Algsamples/08.07-08.08getlmg3/08.07-08.08getlmg3/age/adult/__pycache__/readXml.cpython-37.pyc",
				"/C/Windows/System32/drivers/etc/hosts",
				"//192.168.2.243/e/intellif/SDK/Windows/v2.1.2/rc1/run64.bat",
				"/C/Users/intellif/AppData/Roaming/Sublime Text 3/Packages/SublimeREPL/sublimerepl.py",
				"/F/2018年8月31日 yuv转bmp工具/benchmark.h",
				"/F/2018年8月31日 yuv转bmp工具/TrackerTest.cpp",
				"/F/code/sdk/AlgTestBench_0718-windows/externel/boost/include/boost/filesystem/path.hpp",
				"/F/SDK/Windows/v2.1.2/rc1/test/benchmark/searcher/SearcherTest.cpp1",
				"/F/SDK/Windows/v2.1.2/rc1/license/signature",
				"/F/SDK/Windows/v2.1.2/rc1/test/benchmark/tracker/TrackerTest.cpp1",
				"/F/SDK/Windows/v2.1.2/rc1/test/benchmark/run64.bat",
				"/F/SDK/Windows/v2.1.2/rc0/run64.bat",
				"/C/Program Files/Java/jdk1.8.0_172/bin/runJava.bat",
				"/F/yuvToBmp/YuvHelper.java",
				"/F/yuvToBmp/java.lang.ArrayIndexOutOfBoundsException",
				"/F/yuvToBmp/\tat YuvHelper.convertYuv422ToRgb(YuvHelper.java",
				"/F/yuvToBmp/\tat YuvHelper.main(YuvHelper.java",
				"/C/Users/intellif/Desktop/YuvHelper.java",
				"//192.168.2.243/e/intellif/SDK/Windows/v2.1.2/rc1/test/benchmark/build64.bat",
				"/F/yuvToBmp/yuvToBmp.cpp",
				"/C/Users/intellif/Desktop/java.lang.ArrayIndexOutOfBoundsException",
				"/F/yuvToBmp/yuvToBmp.java",
				"/F/yuvToBmp/  位置",
				"/F/SDK/Windows/v2.1.2/rc1/yuvToBmp.cpp",
				"/F/SDK/Windows/v2.0.0/build.bat",
				"/F/code/c++/test.c",
				"/F/code/py/getImg/1_1.py",
				"/F/SDK/Windows/v2.1.2/run64.bat",
				"/F/SDK/Windows/v2.1.2/rc0/test/benchmark/searcher/SearcherTest.h",
				"/F/SDK/Windows/v2.1.2/rc1/test/benchmark/common/benchmark.h",
				"/C/Users/intellif/Desktop/Temporary/demo.cpp",
				"/F/code/py/getSamples/getPicture_Multithreading.py",
				"/C/Users/intellif/Desktop/similog.txt",
				"/D/Algsamples/calc/imgname.txt",
				"/C/Users/intellif/Desktop/similogAll.txt",
				"/C/Users/intellif/Desktop/Temporary/demo [2].cpp",
				"/C/Users/intellif/Documents/WeChat Files/xkzstyle/Files/reference_results_person.tsv",
				"/C/Users/intellif/Desktop/Temporary/demo.cpp33",
				"/C/Users/intellif/Desktop/Temporary/demo_bak1 [2].cpp11",
				"/C/Users/intellif/Desktop/Temporary/person1.cpp",
				"/F/SDK/Linux/v2.1.0/rc0/linux/x86_64/include/IFaceRecType.h",
				"/F/code/py/alg/compareresult/comresult.py",
				"/F/SDK/Linux/v2.1.0/rc0/benchmark/common/utils.cpp",
				"/C/Python37/lib/site-packages/numpy/core/fromnumeric.py",
				"/F/code/py/checkHouse/gethousemes.py",
				"/C/Users/intellif/Desktop/Temporary/person.cpp",
				"/F/code/py/checkHouse/gethousemes - 副本.py",
				"/F/SDK/Windows/v2.0.0/run.bat",
				"/F/SDK/Windows/v2.1.2/test_case/rename.bat",
				"//192.168.2.243/e/intellif/SDK/old_Linux/SDK_test_samples/1_1/朱晓纯/rename.bat",
				"/F/SDK/Windows/v2.1.2/test/benchmark/build64.bat",
				"/F/SDK/Windows/v2.1.2/license/signature",
				"/F/SDK/Windows/v2.1.2/test/benchmark/predictor/PredictorTest.cpp1",
				"/C/Python37/lib/site-packages/requests/sessions.py",
				"/C/Users/intellif/Desktop/rk.py",
				"/C/Users/intellif/Desktop/ruokuai-python2/rk.py",
				"/F/SDK/Windows/v2.1.2/test/benchmark/run64.bat",
				"/F/code/py/checkHouse/recordparams.py",
				"/C/Python37/lib/site-packages/bs4/element.py",
				"/D/pyenv/venv/Scripts/activate.bat",
				"/F/code/sdk/AlgTestBench_0718-windows/externel/boost/include/boost/algorithm/string/split.hpp",
				"/F/SDK/Windows/v2.1.2/test/benchmark/detector/DetectorTest.cpp1",
				"/F/SDK/Windows/v2.1.2/test/benchmark/common/benchmark.h",
				"/C/Python37/lib/site-packages/requests_html.py",
				"/F/SDK/Windows/test/benchmark/searcher/SearcherTest.cpp",
				"/F/SDK/Windows/test/benchmark/common/benchmark.h",
				"/F/SDK/Windows/test/benchmark/detector/DetectorTest.h",
				"/F/SDK/Windows/test/benchmark/detector/DetectorTest.cpp",
				"/F/SDK/Windows/build.bat",
				"/F/123/1.dgrp",
				"/F/code/java/src/com/xu.keze/TestStaticFun.java",
				"/F/SDK/Windows/run.bat",
				"/F/code/c++/test.cpp",
				"/c/mingw/lib/gcc/mingw32/6.3.0/include/c++/ostream",
				"/C/Users/intellif/Desktop/Temporary/demo.cpp.face_attr",
				"/F/SDK/Windows/test/benchmark/detector/CMakeLists.txt",
				"/F/SDK/Windows/test/benchmark/detector/build.sh",
				"/C/Users/intellif/Desktop/Temporary/common.h",
				"/F/SDK/Windows/test/benchmark/common/utils.h",
				"/C/Users/intellif/Desktop/demo.cpp",
				"/F/SDK/Windows/license/signature",
				"/F/code/java/src/com/xu.keze/IfTest.java",
				"/F/code/py/alg/compareresult/venv1.py",
				"/C/Users/intellif/Desktop/Temporary/demo - 副本.cpp",
				"/C/Users/intellif/Desktop/Temporary/demo [3].cpp",
				"/C/Users/intellif/AppData/Roaming/Sublime Text 3/Packages/User/javaR.sublime-build",
				"/C/Users/intellif/AppData/Roaming/Sublime Text 3/Packages/User/Python-Virtualenv.sublime-build",
				"/C/Users/intellif/AppData/Roaming/Sublime Text 3/Packages/User/PythonTestRunner.last-run",
				"/C/Users/intellif/AppData/Roaming/Sublime Text 3/Packages/User/C&C++R.sublime-build",
				"/C/Users/intellif/Desktop/Temporary/demo_bak.cpp",
				"/C/Users/intellif/Desktop/Temporary/demo.cpp.bak",
				"/F/SDK/Linux/v2.0.0/linux/test/benchmark/detector/DetectorTest.cpp",
				"/F/code/sdk/AlgTestBench_0718-windows/src/utils.h",
				"/F/SDK/Linux/v2.0.0/linux/test/benchmark/common/benchmark.h",
				"/F/code/py/alg/compareresult/base1.txt",
				"/F/code/py/alg/compareresult/test1.txt",
				"/C/Users/intellif/Desktop/build_mxnet(1).sh",
				"/C/Users/intellif/Desktop/Temporary/build_mxnet1.sh",
				"/F/code/py/alg/compareresult/comp1.txt",
				"/F/code/py/alg/compareresult/hat.log",
				"/F/code/py/alg/compareresult/no+hatlog.txt",
				"/C/Users/intellif/Desktop/Temporary/SearcherTest.cpp",
				"/F/SDK/Linux/v2.1.0/rc0/benchmark原始/common/utils.cpp",
				"/C/Users/intellif/Desktop/Temporary/nhatlog.txt",
				"/C/Users/intellif/Desktop/Temporary/hatylog.txt"
			],
			"find":
			{
				"height": 27.0
			},
			"find_in_files":
			{
				"height": 128.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"%test_case%",
					"1920",
					"1080",
					"[",
					"bbox",
					"name",
					"d",
					"ignore",
					"ing",
					"ingr",
					"ingo",
					"ing",
					"bbox",
					"int",
					"↵",
					"fname",
					"cv2",
					"getbbox",
					"file",
					"不像",
					"parse_rec",
					"voc_ap",
					"parse_rec",
					"voc_ap",
					"xmlPath",
					"537",
					"速度",
					"44 页",
					"速度太快了，休息一下吧 暂停1秒后继续",
					" 蓝桥杯",
					" &&蓝桥杯",
					"43页",
					"43",
					"速度",
					"10",
					"500",
					"100",
					"1000",
					"5000",
					"100000",
					"500000",
					"test_case4",
					"com.intellif.file",
					"\\",
					"printcolor",
					"o",
					"printcolor",
					"ExtractFeature",
					"\\",
					"100000",
					"det",
					"base_feat",
					"parse_rec",
					"voc_eval",
					".jpg",
					"  ",
					",",
					"========================================================================\n",
					"../test_img/person/",
					"20180427T184207_522.",
					"20180511T183503_21239.",
					"20180511T183503_21239.jpg",
					"zhuxiaochun",
					"base_image_path",
					"IMREAD",
					"imread",
					"IMREAD",
					"imread",
					"IMREAD",
					"imread",
					"IMREAD",
					"imread",
					" )",
					"( ",
					"name",
					"image1",
					"image",
					"image_path",
					"\\",
					"20180510T120701_19604.jpg",
					"957",
					"zhuxiaochun_quanshen",
					"184",
					"1361",
					"1121",
					"zhuxiaochun_quanshen",
					"vector<string",
					"persons",
					"i",
					"persons",
					"cv::",
					"name",
					"with",
					"voc_ap",
					"parse_rec",
					"astyp1e",
					"difficult",
					"ditticult",
					"\\",
					"1000000",
					"rk_create",
					"password",
					"username",
					"21",
					"20",
					"test_case",
					"3",
					"\\",
					"text",
					"21",
					"1 data",
					"1",
					"-",
					"Accept",
					"name",
					":",
					"detections",
					"split",
					"out_image_path",
					"in_image_path",
					"demo",
					"showAllFiles",
					"demo",
					"compare",
					"detections",
					".jpg",
					"g",
					"face 0"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"/",
					"",
					" ",
					"",
					".jpg",
					"",
					"120",
					"AlgTestBenchR"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 27.0
			},
			"input":
			{
				"height": 51.0
			},
			"menu_visible": true,
			"output.autopep8":
			{
				"height": 149.0
			},
			"output.exec":
			{
				"height": 240.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 50.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"Iou",
						"F:\\Alg\\Iou.py"
					],
					[
						"",
						"F:\\Alg\\screenshot - 副本.py"
					],
					[
						"screen",
						"F:\\Alg\\screenshot - 副本.py"
					],
					[
						"scr",
						"F:\\Alg\\screenshot - 副本.py"
					],
					[
						"1",
						"py\\getImg\\1_1.py"
					],
					[
						"mul",
						"py\\getSamples\\getPicture_Multithreading.py"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 264.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 1045.6
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"re",
						"re\tmodule"
					],
					[
						"im",
						"imread\tfunction"
					],
					[
						"m",
						"missed1"
					],
					[
						"ca",
						"cal_IoU\tfunction"
					],
					[
						"in",
						"incorrect\tstatement"
					],
					[
						"bb",
						"bbox\tstatement"
					],
					[
						"c",
						"calc\tstatement"
					],
					[
						"b",
						"bbox"
					],
					[
						"va",
						"value"
					],
					[
						"img",
						"imgFile\tparam"
					],
					[
						"n",
						"ndetect\tstatement"
					],
					[
						"v",
						"values"
					],
					[
						"num",
						"numpy\tmodule"
					],
					[
						"vo",
						"voc_eval\tfunction"
					],
					[
						"str",
						"str1"
					],
					[
						"f",
						"findall"
					],
					[
						"time",
						"time2\tstatement"
					],
					[
						"s",
						"strftime\tfunction"
					],
					[
						"tie",
						"time1\tstatement"
					],
					[
						"st",
						"str1\tstatement"
					],
					[
						"d",
						"dirname\tstatement"
					],
					[
						"get",
						"getbbox\tfunction"
					],
					[
						"cac",
						"cachefile\tstatement"
					],
					[
						"li",
						"lines\tstatement"
					],
					[
						"so",
						"sortresult"
					],
					[
						"R",
						"Rect"
					],
					[
						"Re",
						"Result"
					],
					[
						"ba",
						"base_persons"
					],
					[
						"si",
						"simil"
					],
					[
						"base",
						"base_image"
					],
					[
						"pe",
						"persons"
					],
					[
						"ge",
						"get_mAp\tfunction"
					],
					[
						"xml",
						"xmlPath"
					],
					[
						"det",
						"detPath"
					],
					[
						"class",
						"classes"
					],
					[
						"pr",
						"print\tfunction"
					],
					[
						"xm",
						"xmlPath\tparam"
					],
					[
						"de",
						"detPath\tparam"
					],
					[
						"cl",
						"classes\tparam"
					],
					[
						"x",
						"xml"
					],
					[
						"us",
						"use_o7_metric\tparam"
					],
					[
						"fla",
						"float\tmodule"
					],
					[
						"cum",
						"cumsum\tfunction"
					],
					[
						"ov",
						"ovmax\tstatement"
					],
					[
						"int",
						"inters\tstatement"
					],
					[
						"min",
						"minimum\tinstance"
					],
					[
						"BB",
						"BBGT\tstatement"
					],
					[
						"as",
						"astyp1e"
					],
					[
						"ima",
						"image_ids\tstatement"
					],
					[
						"di",
						"ditticult"
					],
					[
						"np",
						"npos\tstatement"
					],
					[
						"fo",
						"format"
					],
					[
						"pa",
						"parse_rec\tfunction"
					],
					[
						"spl",
						"splitext\tfunction"
					],
					[
						"is",
						"isfile\tfunction"
					],
					[
						"su",
						"sum\tfunction"
					],
					[
						"max",
						"maximum\tinstance"
					],
					[
						"usr",
						"use_o7_metric"
					],
					[
						"ob",
						"object"
					],
					[
						"find",
						"findall\tfunction"
					],
					[
						"Ele",
						"ElementTree\tmodule"
					],
					[
						"g",
						"getVercode\tfunction"
					],
					[
						"B",
						"BeautifulSoup\tclass"
					],
					[
						"r",
						"request\tstatement"
					],
					[
						"fil",
						"findall\tfunction"
					],
					[
						"test",
						"test_case"
					],
					[
						"a",
						"a_list\tstatement"
					],
					[
						"dum",
						"dumps\tfunction"
					],
					[
						"data",
						"data1\tstatement"
					],
					[
						"h",
						"headers1"
					],
					[
						"du",
						"dumps\tfunction"
					],
					[
						"H",
						"HTMLSession\tclass"
					],
					[
						"i",
						"import\tkeyword"
					],
					[
						"p",
						"pedestrian"
					],
					[
						"per",
						"person"
					],
					[
						"te",
						"testb"
					],
					[
						"fi",
						"first"
					],
					[
						"end",
						"endl"
					],
					[
						"inc",
						"incorrect2\tstatement"
					],
					[
						"co",
						"correct\tstatement"
					],
					[
						"read",
						"readline\tfunction"
					],
					[
						"age",
						"age_group"
					],
					[
						"inp",
						"input_and_output"
					],
					[
						"sot",
						"sorted\tfunction"
					],
					[
						"or",
						"origen\tstatement"
					],
					[
						"o",
						"origen\tstatement"
					],
					[
						"gen",
						"gender"
					],
					[
						"file",
						"filename"
					],
					[
						"sh",
						"showAllFiles"
					],
					[
						"con",
						"const"
					],
					[
						"e",
						"e"
					],
					[
						"fa",
						"face_gender_model_path"
					],
					[
						"set",
						"set_face_gender_model"
					],
					[
						"ar",
						"arctern"
					],
					[
						"face",
						"face_det_model_path"
					],
					[
						"T",
						"True\tkeyword"
					],
					[
						"th",
						"thread_\tstatement"
					],
					[
						"t",
						"thread"
					],
					[
						"ex",
						"except"
					],
					[
						"dir",
						"dir_detector"
					],
					[
						"Fe",
						"feTime"
					],
					[
						"ip",
						"ipoint2"
					],
					[
						"cou",
						"ccount"
					],
					[
						"ra",
						"range\tfunction"
					],
					[
						"he",
						"headers"
					],
					[
						"sys",
						"system〔function〕"
					],
					[
						"IF",
						"IFaceRecSDK_FaceClear"
					],
					[
						"IFaceRecSDK_S",
						"IFaceRecSDK_SearcherDestroy"
					],
					[
						"arg",
						"arg_pagesize"
					],
					[
						"se",
						"self〔argument〕"
					],
					[
						"self",
						"self,a,b"
					],
					[
						"if",
						"ifmain\tif __name__ == '__main__'"
					],
					[
						"for",
						"for\tfor (…) {…}"
					],
					[
						"arr",
						"arr〔variable〕"
					],
					[
						"w",
						"webdriver"
					],
					[
						"l",
						"longest"
					],
					[
						"ne",
						"newStr2"
					],
					[
						"new",
						"newStr〔variable〕"
					],
					[
						"S",
						"System"
					],
					[
						"u",
						"upgrade_log"
					],
					[
						"tesT",
						"test2"
					],
					[
						"tes",
						"test2〔variable〕"
					],
					[
						"bas",
						"base\tTag"
					],
					[
						"backgroundc",
						"background-color"
					],
					[
						"onc",
						"onclick\tAttr"
					],
					[
						"fu",
						"function"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/F/SDK/Windows/v2.1.2/rc1/run64.bat",
					"settings":
					{
						"buffer_size": 2930,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					}
				},
				{
					"contents": "#include <iostream>\n#include <opencv2/core/core.hpp>\n#include <opencv2/highgui/highgui.hpp>\n#include <opencv2/imgproc/imgproc.hpp>\n#include <opencv2/imgcodecs/imgcodecs.hpp>\n#include <arctern/arctern_manager.h>\n#include <dirent.h>\n#include <sys/stat.h>\n\nusing namespace std;\nusing namespace arctern;\n\nFILE *m_pLogFile = NULL;\n\nvoid attr(const string image_path) {\n\n      const string face_det_model_path = \"../data/face-det-0.9.0.bin\";\n      const string face_gender_model_path = \"../data/face-gender-1.4.3.bin\";\n      const string face_age_model_path = \"../data/face-age-1.1.2.bin\";\n      const string face_hat_model_path = \"../data/face-hat-0.0.1.bin\";\n      const string face_glasses_model_path = \"../data/face-glass-0.0.1.bin\";\n      const string face_quailty_model_path = \"../data/face-quality-pose-0.0.1.bin\";\n\n      arctern::ArcternManager arc;\n      arc.set_face_det_model(face_det_model_path);\n      arc.set_face_gender_model(face_gender_model_path);\n      arc.set_face_age_model(face_age_model_path);\n      arc.set_face_hat_model(face_hat_model_path);\n      arc.set_face_glass_model(face_glasses_model_path);\n      arc.set_face_pose_quality_model(face_quailty_model_path);\n\n      cv::Mat image = cv::imread(image_path, cv::IMREAD_COLOR);\n      assert(!image.empty());\n      vector<pair<cv::Rect, float>>  detections = arc.detect_face(image);\n      cv::Mat matclone =  image.clone();\n      cv::Point origin;\n      m_pLogFile = fopen(\"../log.txt\", \"a\");\n      cout << \"\\033[33mFaceCnt \" << detections.size() << \"\\033[0m\" << endl;\n\n\n\n  for (int i = 0; i < detections.size(); i++)\n  {\n\n      cout << \"face \" << i << \": x: \" << detections[i].first.x << \" , y: \" << detections[i].first.y \n      << \", width: \" << detections[i].first.width << \", height: \" << detections[i].first.height << endl;\n\n      int baseline;\n      // cv::Size text_size = cv::getTextSize(to_string(i), cv::FONT_HERSHEY_DUPLEX, 1, 1, &baseline);\n      origin.x = detections[i].first.x + detections[i].first.width/4;\n      origin.y = detections[i].first.y + detections[i].first.height/2;\n      cv::putText(matclone, \"ID:\" + to_string(i), origin, cv::FONT_HERSHEY_DUPLEX, 1, cv::Scalar(0, 0, 255), 1);\n        \n      cv::rectangle(matclone, detections[i].first, cv::Scalar(0, 255, 0), 2);\n      std::pair<Gender, float> gender = arc.predict_face_gender(image, detections[i].first);\n      std::pair<Hat, float> hat = arc.predict_face_hat(image, detections[i].first);\n      std::pair<Glass, float> glass = arc.predict_face_glass(image, detections[i].first);\n      std::pair<float, cv::Vec3f> quailty = arc.predict_face_quality_pose(image, detections[i].first);\n      float age = arc.predict_face_age(image, detections[i].first);\n\n  \n     string age_group;\n\n      if (int(age) < 10)\n      {\n            age_group = \"child\";\n      }\n      else if (int(age) >= 10 && int(age) < 30)\n      {\n            age_group = \"adult\";\n      }\n      else if (int(age) >= 30 && int(age) < 50)\n      {\n            age_group = \"middle\";\n      }\n      else\n      {\n            age_group = \"old\";\n      }  \n\n      fprintf(m_pLogFile, \"%s, face %d, gender %d, age %f, age_group %s, hat %d, glass %d, quailty %f\\n\", image_path.c_str(),\n              i, gender.first, age, age_group.c_str(), hat.first, glass.first, quailty.first);\n\n      printf(\"      gender %d, age %f, age_group %s, hat %d, glass %d, quailty %f\\n\",\n              gender.first, age, age_group.c_str(), hat.first, glass.first, quailty.first);\n  }\n\n\n  string image1 =  image_path.substr(image_path.rfind('/'));\n  string image2 = image1.replace(image1.find(\"/\"),1,\"\");\n  cv::imwrite(\"../outimg/\"+ image2, matclone);\n  if (m_pLogFile) fclose(m_pLogFile);\n\n}\n\n\nint pedestrian(string image_path) {\n\n  arctern::ArcternManager arc;\n  const string pedestrian_det_model_path = \"../data/pedestrian-det-0.0.4.bin\";\n  const string pedestrian_feat_model_path = \"../data/person-feat-0.2.0.bin\";\n  arc.set_pedestrian_det_model(pedestrian_det_model_path);\n  arc.set_person_feat_model(pedestrian_feat_model_path);\n\n  cv::Mat image = cv::imread(image_path, cv::IMREAD_COLOR);\n  assert(!image.empty());\n  cv::Point origin;\n\n  vector<pair<cv::Rect, float>> persons = arc.detect_pedestrian(image);\n  \n  for (int i = 0; i < persons.size(); i++)\n  {\n    cout << \"person \" << i << \": x: \" << persons[i].first.x << \" , y: \" << persons[i].first.y\n      << \", width: \" << persons[i].first.width << \", height: \" << persons[i].first.height << endl;\n\n    int baseline;\n    cv::Size text_size = cv::getTextSize(to_string(i), cv::FONT_HERSHEY_DUPLEX, 1, 1, &baseline);\n    origin.x = persons[i].first.x + 120;\n    origin.y = persons[i].first.y + 120;\n    cv::putText(image, \"ID:\" + to_string(i), origin, cv::FONT_HERSHEY_DUPLEX, 1, cv::Scalar(0, 0, 255), 2);\n\n    cv::rectangle(image, persons[i].first, cv::Scalar(0, 255, 0), 2);\n    vector<uint8> per_feat = arc.get_pedestrian_feat(image, persons[i].first);\n\n\n    float simil = arc.compute_similarity(per_feat, per_feat);\n    printf(\"%f \\n\", simil);\n  }\n\n  string image1 =  image_path.substr(image_path.rfind('/'));\n  string image2 = image1.replace(image1.find(\"/\"),1,\"\");\n  cv::imwrite(\"../outimg/person_det/\"+ image2, image);\n\n}\n\n\nvoid showAllFiles( const char * dir_name )\n{\n    \n    struct dirent * filename;    \n    DIR * dir;                   \n    dir = opendir( dir_name );\n   int num = 0;\n    while( ( filename = readdir(dir) ) != NULL )\n    {    \n      if( strcmp( filename->d_name , \".\" ) == 0 || \n        strcmp( filename->d_name , \"..\") == 0    )\n        continue;\n      num += 1;\n      string dir = dir_name;\n      cout << \"\\033[32mfile \" << num << \" \" << dir+\"/\"+filename ->d_name+\"\\033[0m\" << endl;\n      attr(dir+\"/\"+filename ->d_name);\n      //pedestrian(dir+\"/\"+filename ->d_name);\n    }\n\n    cout << \"\\033[31m===================== End =====================\\033[0m\" << endl;\n} \n\nint main() \n{\n  // showAllFiles(\"../test_img/720p\");\n\n  showAllFiles(\"../test_img/Alignment_test/detector\");\n  return 0;\n}\n",
					"file": "/C/Users/intellif/Desktop/Temporary/demo.cpp",
					"file_size": 5956,
					"file_write_time": 131817437118002894,
					"settings":
					{
						"buffer_size": 5956,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"contents": "//\n// Created by Administrator on 2017/9/21.\n//\n\n#include <string>\n#include <fstream>\n#include <vector>\n#include <stdlib.h>\n\n#include \"boost/bind.hpp\"\n#include \"boost/function.hpp\"\n#include \"boost/filesystem.hpp\"\n#include \"boost/smart_ptr.hpp\"\n#include \"boost/thread/thread.hpp\"\n#include \"boost/thread/mutex.hpp\"\n#include \"boost/thread/condition.hpp\"\n#include \"boost/unordered_map.hpp\"\n\n#include \"opencv2/core/core.hpp\"\n#include \"opencv2/imgproc.hpp\"\n#include \"opencv2/imgcodecs.hpp\"\n#include \"opencv2/imgproc/types_c.h\"\n#include \"opencv2/imgcodecs/imgcodecs_c.h\"\n#include <time.h>\n#include <chrono>\n\n#include \"IFaceRecSDK.h\"\n#include \"utils.h\"\n#include \"PredictorTest.h\"\n\nusing namespace cv;\nusing namespace std;\n\nPredictorTest::PredictorTest(const string & sCasePath, int nTestType) : BenchMark(sCasePath)\n{\n    m_nTestType = nTestType;\n\n    switch (m_nTestType)\n    {\n        case 0:\n            m_nAttrMask = IFACEREC_ATTR_ALL;\n            break;\n        case 1:\n            m_nAttrMask = IFACEREC_GENDER_MASK;\n            break;\n        case 2:\n            m_nAttrMask = IFACEREC_AGE_MASK;\n            break;\n        case 3:\n            m_nAttrMask = IFACEREC_POSE_MASK;\n            break;\n        case 4:\n            m_nAttrMask = IFACEREC_QUALITY_MASK;\n            break;\n        case 5:\n            m_nAttrMask = IFACEREC_GLASSES_MASK;\n            break;\n        case 6:\n            m_nAttrMask = IFACEREC_HAT_MASK;\n            break;\n        case 7:\n            m_nAttrMask = IFACEREC_LANDMARK_MASK;\n            break;\n        default:\n            break;\n    }\n}\n\nPredictorTest::~PredictorTest()\n{\n}\n\nint PredictorTest::CreateTestee(IFaceRecHandle & hHandle, int nThreadId)\n{\n    //if (IFaceRecSDK_PredictorCreate(&hHandle, \"{\\\"ModelPath\\\":\\\"model\\\", \\\"MinSize\\\": 16}\"))\n\tif (IFaceRecSDK_PredictorCreate(&hHandle, \"{\\\"MinSize\\\":24, \\\"ModelPath\\\":\\\"\\model\\\", \\\"ExthSacle\\\": 0, \\\"ExtwSacle\\\": 0, \\\"OnetThr\\\": 0.97, \\\"PnetThr\\\": 0.75, \\\"Profile\\\": false, \\\"RnetThr\\\": 0.7, \\\"ScalePyramid\\\": 0.709,\\\"SquareEn\\\": true}\"))\n\n    {\n        fprintf(m_pLogFile, \"Thread %d, Predictor Create Fail!\\n\", nThreadId);\n        return -1;\n    }\n\n    fprintf(m_pLogFile, \"Thread %d, Predictor Create OK!\\n\", nThreadId);\n\n    return 0;\n}\n\nint PredictorTest::PreRun()\n{   \n    return 0;\n}\n\nint PredictorTest::RunTestee(IFaceRecHandle hHandle, int nImageId, std::string & sImage, int nThreadId)\n{\n    int nAttrCnt = 0;\n    T_IFaceRecAttrResult * ptResult = NULL;\n    T_IFaceRecRect tFaceRect;\n    T_IFaceRecImageInfo tImgInfo;\n\tcv::Mat matImg;\n    boost::filesystem::path path(sImage.c_str());\n    string ext = path.extension().string();\n\n\t\n\n    if (ext == \".yuv\" || ext == \".YUV\")\n    {\n        int width = 720;\n        int height = 576;\n\t\ttFaceRect.left = 0;\n\t\ttFaceRect.top = 0;\n\t\ttFaceRect.right = width - 1;\n\t\ttFaceRect.bottom = height - 1;\n        tImgInfo.eFormat = IFACEREC_IMG_YUV420sp;\n        tImgInfo.nWidth = width;\n        tImgInfo.nHeight = height;\n        tImgInfo.pData = ReadYUV(sImage, width, height);\n        printf(\"Thread %d, ImageId %d, Size_yuv %d * %d, File %s\\n\", nThreadId, nImageId, tImgInfo.nWidth, tImgInfo.nHeight, sImage.c_str());\n    }\n    else\n    {\n\t\tmatImg = cv::imread(sImage);\n\t\ttFaceRect.left = 0;\n\t\ttFaceRect.top = 0;\n\t\ttFaceRect.right = matImg.cols - 1;\n\t\ttFaceRect.bottom = matImg.rows - 1;\n        tImgInfo.eFormat = IFACEREC_IMG_BGR;\n        tImgInfo.nWidth = matImg.cols;\n        tImgInfo.nHeight = matImg.rows;\n        tImgInfo.pData = (void *)matImg.data;\n        printf(\"Thread %d, ImageId %d, Size %d * %d, File %s\\n\", nThreadId, nImageId, matImg.cols, matImg.rows, sImage.c_str());\n    }    \n\n\t// 进行人脸检测, 把检测到的人脸框传给属性检测函数\n\n\tT_IFaceRecDetectResult * ptFace = NULL;\n\tint nFaceCnt = 0;\n\tIFaceRecHandle hHandleDet;\n\tIFaceRecResult detectR = IFaceRecSDK_DetectorCreate(&hHandleDet, \"{\\\"MinSize\\\":24, \\\"ModelPath\\\":\\\"\\model\\\", \\\"ExthSacle\\\": 0, \\\"ExtwSacle\\\": 0, \\\"OnetThr\\\": 0.97, \\\"PnetThr\\\": 0.75, \\\"Profile\\\": false, \\\"RnetThr\\\": 0.7, \\\"ScalePyramid\\\": 0.709,\\\"SquareEn\\\": true}\");\n\tif (detectR)\n\t{\n\t\tprintf(\"\\033[31mDetector Create Fail!\\033[0m\\n\");\n\t\treturn -1;\n\t}\n\n\tif (IFaceRecSDK_FaceDetect(hHandleDet, IFACEREC_IMG_DATA, &tImgInfo, &nFaceCnt, &ptFace))\n\t{\n\t\tprintf(\"\\033[31mFace Detect Error!\\033[0m\\n\");\n\t\treturn -1;\n\t}\n\n  \tprintf(\"\\033[33mFaceCnt %d \\033[0m\\n\", nFaceCnt);\n \n\tauto start = chrono::steady_clock::now();\n\tint if_attr = IFaceRecSDK_AttributePredict(hHandle, IFACEREC_IMG_DATA, &tImgInfo, &(ptFace[0].tFaceRect), &nAttrCnt, &ptResult, m_nAttrMask);\n\tauto end = chrono::steady_clock::now();\n    chrono::duration<double> diff = end - start;\n \n    if (if_attr)\n    {\n        printf(\"\\033[31m Thread %d, AttributePredict Error! 0x%x\\033[0m\\n\", nThreadId, if_attr);\n        return -1;\n    }\n\n    if (ext == \".yuv\" || ext == \".YUV\")\n    {\n        free(tImgInfo.pData);\n    }\n\n\n    if (m_pLogFile)\n    {\n        pr_time+=diff.count();\n        pr_tcount++;\n        std::string sAttrLog;\n        for (int i = 0; i < nAttrCnt; i++)\n        {\n            sAttrLog += (\"<\" + std::to_string(ptResult[i].eType) + \",\" \n                + std::to_string(ptResult[i].nValue) + \",\" \n                + std::to_string(ptResult[i].fConfidence) + \">\");\n        }\n        fprintf(m_pLogFile, \"Thread %d,\\tImageId %d,\\tAttrCnt %d[%s]\\tFile %s, \\tAtrtime %f\\n\", \n            nThreadId, nImageId, nAttrCnt, sAttrLog.c_str(), sImage.c_str(), diff.count());\n        fprintf(m_pRltFile, \"x=%d,y=%d,w=%d,h=%d\\n\", tFaceRect.left, tFaceRect.top, tFaceRect.right- tFaceRect.left, tFaceRect.bottom-tFaceRect.top);\n    }\n \tIFaceRecSDK_DetectorDestroy(hHandleDet);\n   \n    return 0;\n}\n\nint PredictorTest::DestroyTestee(IFaceRecHandle hHandle)\n{\n    return IFaceRecSDK_PredictorDestroy(hHandle);\n}\n\nint main(int argc, char **argv)\n{\n    string sImagePath = \"data\";\n    string sCasePath = \".\";\n    int nThreadCnt = 4;\n    int nFileCnt = 10;\n    int nFileLoopCnt = 1;\n    int nTestType = 0;\n    \n    if (argc >= 2) nThreadCnt = atoi(argv[1]);\n    if (argc >= 3) sImagePath = argv[2];\n    if (argc >= 4) nFileCnt = atoi(argv[3]);\n    if (argc >= 5) sCasePath = argv[4];\n    if (argc >= 6) nFileLoopCnt = atoi(argv[5]);\n    if (argc >= 7) nTestType = atoi(argv[6]);\n    \n    printf(\"\\033[31m PredictorTest Start...\\033[0m\\n\");\n    printf(\"ThreadCnt %d, ImagePath %s, FileCnt %d, CasePath %s, FileLoopCnt %d\\n\", nThreadCnt, sImagePath.c_str(), nFileCnt, sCasePath.c_str(), nFileLoopCnt);\n    \n    IFaceRecSDK_Init(\"{\\\"ModelPath\\\":\\\"model\\\", \\\"LicensePath\\\":\\\"license\\\"}\");\n\n    {\n        PredictorTest AttrDemo(sCasePath, nTestType);\n        AttrDemo.MainThread(sImagePath, nThreadCnt, nFileCnt, nFileLoopCnt);\n    } //析构对象，保存文件\n\n    string sFile1 = sCasePath + \"/result.txt\";\n    string sFile2 = sCasePath + \"/ref.txt\";\n\n    if (FileCompare(sFile1, sFile2))\n    {\n        printf(\"Test %s Result - Success\\n\", sCasePath.c_str());\n    }\n    else\n    {\n        printf(\"Test %s Result - Fail\\n\", sCasePath.c_str());\n    }\n\n    IFaceRecSDK_UnInit();\n}\n\n",
					"file": "//192.168.2.243/e/intellif/SDK/Windows/win32/test/benchmark/predictor/PredictorTest.cpp",
					"file_size": 6993,
					"file_write_time": 131818249810361421,
					"settings":
					{
						"buffer_size": 6962,
						"encoding": "Western (Windows 1252)",
						"line_ending": "Unix",
						"scratch": true
					}
				},
				{
					"file": "/C/Users/intellif/Desktop/Temporary/arctern_manager.h",
					"settings":
					{
						"buffer_size": 10553,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/C/Users/intellif/Desktop/baiduPan.py",
					"settings":
					{
						"buffer_size": 1742,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					}
				},
				{
					"contents": "请输入你想查询的内容：贪狼\n共查询到 1 页\n第 1 页\n操作太快了，休息一下吧 暂停 2 秒后重试\n第 1 条\n名称：  杀破狼·贪狼.国粤双语中字.Paradox.2017.BD1080P.X264.AC3.2Audios.CHS-882FX.torrent \n时间： 2017-12-15\n信息：  杀破狼·贪狼.国粤双语中字.Paradox.2017.BD1080P.X264.AC3.2Audios.CHS-882FX.torrent下载_网盘下载_盘搜搜 \n链接： https://pan.baidu.com/s/1qYUNk76 密码： \n大小: 未知大小\n\n查询结束！\n\n***Repl Closed***\n",
					"settings":
					{
						"buffer_size": 312,
						"line_ending": "Windows",
						"name": "*REPL* [python]",
						"read_only": true,
						"scratch": true
					}
				},
				{
					"file": "/F/Alg/hkperson.py",
					"settings":
					{
						"buffer_size": 3592,
						"line_ending": "Windows"
					}
				},
				{
					"file": "/F/code/py/getImg/1_1.py",
					"settings":
					{
						"buffer_size": 6482,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					}
				}
			],
			"build_system": "Packages/User/Python-Virtualenv.sublime-build",
			"build_system_choices":
			[
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/Python-Virtualenv.sublime-build",
							""
						],
						[
							"Packages/User/shellR.sublime-build",
							""
						]
					],
					[
						"Packages/User/Python-Virtualenv.sublime-build",
						""
					]
				],
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shellR.sublime-build",
							""
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/C&C++R.sublime-build",
							""
						],
						[
							"Packages/User/C&C++R.sublime-build",
							"g++ Compile"
						],
						[
							"Packages/User/C&C++R.sublime-build",
							"g++ Run"
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shellR.sublime-build",
							""
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/C++.sublime-build",
							""
						],
						[
							"Packages/User/C++.sublime-build",
							"g++ Compile"
						],
						[
							"Packages/User/C++.sublime-build",
							"g++ Run"
						],
						[
							"Packages/User/javascript.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/C++.sublime-build",
							""
						],
						[
							"Packages/User/C++.sublime-build",
							"g++ Compile"
						],
						[
							"Packages/User/C++.sublime-build",
							"g++ Run"
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/javascript.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						"Run"
					]
				],
				[
					[
						[
							"Packages/Java/Ant.sublime-build",
							""
						],
						[
							"Packages/Java/JavaC.sublime-build",
							""
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/javaR.sublime-build",
							""
						],
						[
							"Packages/User/javascript.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/User/javaR.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Java/Ant.sublime-build",
							""
						],
						[
							"Packages/Java/JavaC.sublime-build",
							""
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/javaR.sublime-build",
							""
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/User/javaR.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Java/Ant.sublime-build",
							""
						],
						[
							"Packages/Java/JavaC.sublime-build",
							""
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/javaR.sublime-build",
							""
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shellR.sublime-build",
							""
						]
					],
					[
						"Packages/User/javaR.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Java/Ant.sublime-build",
							""
						],
						[
							"Packages/Java/JavaC.sublime-build",
							""
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/javascript.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/Java/JavaC.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/javascript.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/shell2.sublime-build",
							""
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/javascript.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/User/javascript.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/User/jsR.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/jsR.sublime-build",
							""
						],
						[
							"Packages/User/shellR.sublime-build",
							""
						]
					],
					[
						"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/shell.sublime-build",
							""
						]
					],
					[
						"Packages/User/shell.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/shell2.sublime-build",
							""
						]
					],
					[
						"Packages/User/shell2.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 490.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"subsh",
						"SublimeREPL: Shell"
					],
					[
						"prv",
						"PackageResourceViewer: Open Resource"
					],
					[
						"instalk",
						"Package Control: Install Package"
					]
				],
				"width": 609.0
			},
			"console":
			{
				"height": 130.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/F/code/py",
				"/F/code/py/checkHouse",
				"/F/code/java/src",
				"/F/code/java/src/com",
				"/F/code/c++"
			],
			"file_history":
			[
				"/F/code/py/test_django/mysite/manage.py",
				"/C/Users/intellif/Desktop/Temporary/20170710T170232_118048_118054.jpg",
				"//192.168.2.243/e/intellif/SDK/Windows/win32/test/benchmark/predictor/PredictorTest.cpp",
				"/C/Users/intellif/AppData/Roaming/Sublime Text 3/Packages/Anaconda/Anaconda.sublime-settings",
				"/C/Users/intellif/Desktop/baiduPan.py",
				"/F/SDK/Windows/v2.1.2/rc1/test/benchmark/build64.bat",
				"/F/Alg/screenshot.py",
				"/F/Alg/screenshot - 副本.py",
				"/F/Alg/Iou.py",
				"/F/Alg/hkperson.py",
				"/D/Algsamples/calc/1/calc/alg - 副本.py",
				"/C/Users/intellif/Desktop/testfor.py",
				"/D/Algsamples/08.07-08.08getlmg3/08.07-08.08getlmg3/age/adult/readXml.py",
				"/F/SDK/Windows/v2.1.2/rc1/run64.bat",
				"/D/Algsamples/calc/1/calc/alg.py",
				"/D/Algsamples/calc/alg.py",
				"/C/Users/intellif/Desktop/Sanic.py",
				"/F/code/c++/sort.c",
				"/F/SDK/Windows/v2.1.2/rc1/test/benchmark/tracker/TrackerTest.cpp",
				"/C/Users/intellif/Desktop/12.py",
				"/C/Users/intellif/Desktop/Temporary/arctern_manager.h",
				"/F/Alg/drawing.py",
				"/D/Algsamples/calc/1/calc/alg - 副本 (2).py",
				"/F/code/C/CProject/CProject/width.c",
				"/F/code/C/CProject/CProject/varwid.c",
				"/D/Algsamples/08.07-08.08getlmg3/08.07-08.08getlmg3/age/adult/__pycache__/readXml.cpython-37.pyc",
				"/C/Windows/System32/drivers/etc/hosts",
				"//192.168.2.243/e/intellif/SDK/Windows/v2.1.2/rc1/run64.bat",
				"/C/Users/intellif/AppData/Roaming/Sublime Text 3/Packages/SublimeREPL/sublimerepl.py",
				"/F/2018年8月31日 yuv转bmp工具/benchmark.h",
				"/F/2018年8月31日 yuv转bmp工具/TrackerTest.cpp",
				"/F/code/sdk/AlgTestBench_0718-windows/externel/boost/include/boost/filesystem/path.hpp",
				"/F/SDK/Windows/v2.1.2/rc1/test/benchmark/searcher/SearcherTest.cpp1",
				"/F/SDK/Windows/v2.1.2/rc1/license/signature",
				"/F/SDK/Windows/v2.1.2/rc1/test/benchmark/tracker/TrackerTest.cpp1",
				"/F/SDK/Windows/v2.1.2/rc1/test/benchmark/run64.bat",
				"/F/SDK/Windows/v2.1.2/rc0/run64.bat",
				"/C/Program Files/Java/jdk1.8.0_172/bin/runJava.bat",
				"/F/yuvToBmp/YuvHelper.java",
				"/F/yuvToBmp/java.lang.ArrayIndexOutOfBoundsException",
				"/F/yuvToBmp/\tat YuvHelper.convertYuv422ToRgb(YuvHelper.java",
				"/F/yuvToBmp/\tat YuvHelper.main(YuvHelper.java",
				"/C/Users/intellif/Desktop/YuvHelper.java",
				"//192.168.2.243/e/intellif/SDK/Windows/v2.1.2/rc1/test/benchmark/build64.bat",
				"/F/yuvToBmp/yuvToBmp.cpp",
				"/C/Users/intellif/Desktop/java.lang.ArrayIndexOutOfBoundsException",
				"/F/yuvToBmp/yuvToBmp.java",
				"/F/yuvToBmp/  位置",
				"/F/SDK/Windows/v2.1.2/rc1/yuvToBmp.cpp",
				"/F/SDK/Windows/v2.0.0/build.bat",
				"/F/code/c++/test.c",
				"/F/code/py/getImg/1_1.py",
				"/F/SDK/Windows/v2.1.2/run64.bat",
				"/F/SDK/Windows/v2.1.2/rc0/test/benchmark/searcher/SearcherTest.h",
				"/F/SDK/Windows/v2.1.2/rc1/test/benchmark/common/benchmark.h",
				"/C/Users/intellif/Desktop/Temporary/demo.cpp",
				"/F/code/py/getSamples/getPicture_Multithreading.py",
				"/C/Users/intellif/Desktop/similog.txt",
				"/D/Algsamples/calc/imgname.txt",
				"/C/Users/intellif/Desktop/similogAll.txt",
				"/C/Users/intellif/Desktop/Temporary/demo [2].cpp",
				"/C/Users/intellif/Documents/WeChat Files/xkzstyle/Files/reference_results_person.tsv",
				"/C/Users/intellif/Desktop/Temporary/demo.cpp33",
				"/C/Users/intellif/Desktop/Temporary/demo_bak1 [2].cpp11",
				"/C/Users/intellif/Desktop/Temporary/person1.cpp",
				"/F/SDK/Linux/v2.1.0/rc0/linux/x86_64/include/IFaceRecType.h",
				"/F/code/py/alg/compareresult/comresult.py",
				"/F/SDK/Linux/v2.1.0/rc0/benchmark/common/utils.cpp",
				"/C/Python37/lib/site-packages/numpy/core/fromnumeric.py",
				"/F/code/py/checkHouse/gethousemes.py",
				"/C/Users/intellif/Desktop/Temporary/person.cpp",
				"/F/code/py/checkHouse/gethousemes - 副本.py",
				"/F/SDK/Windows/v2.0.0/run.bat",
				"/F/SDK/Windows/v2.1.2/test_case/rename.bat",
				"//192.168.2.243/e/intellif/SDK/old_Linux/SDK_test_samples/1_1/朱晓纯/rename.bat",
				"/F/SDK/Windows/v2.1.2/test/benchmark/build64.bat",
				"/F/SDK/Windows/v2.1.2/license/signature",
				"/F/SDK/Windows/v2.1.2/test/benchmark/predictor/PredictorTest.cpp1",
				"/C/Python37/lib/site-packages/requests/sessions.py",
				"/C/Users/intellif/Desktop/rk.py",
				"/C/Users/intellif/Desktop/ruokuai-python2/rk.py",
				"/F/SDK/Windows/v2.1.2/test/benchmark/run64.bat",
				"/F/code/py/checkHouse/recordparams.py",
				"/C/Python37/lib/site-packages/bs4/element.py",
				"/D/pyenv/venv/Scripts/activate.bat",
				"/F/code/sdk/AlgTestBench_0718-windows/externel/boost/include/boost/algorithm/string/split.hpp",
				"/F/SDK/Windows/v2.1.2/test/benchmark/detector/DetectorTest.cpp1",
				"/F/SDK/Windows/v2.1.2/test/benchmark/common/benchmark.h",
				"/C/Python37/lib/site-packages/requests_html.py",
				"/F/SDK/Windows/test/benchmark/searcher/SearcherTest.cpp",
				"/F/SDK/Windows/test/benchmark/common/benchmark.h",
				"/F/SDK/Windows/test/benchmark/detector/DetectorTest.h",
				"/F/SDK/Windows/test/benchmark/detector/DetectorTest.cpp",
				"/F/SDK/Windows/build.bat",
				"/F/123/1.dgrp",
				"/F/code/java/src/com/xu.keze/TestStaticFun.java",
				"/F/SDK/Windows/run.bat",
				"/F/code/c++/test.cpp",
				"/c/mingw/lib/gcc/mingw32/6.3.0/include/c++/ostream",
				"/C/Users/intellif/Desktop/Temporary/demo.cpp.face_attr",
				"/F/SDK/Windows/test/benchmark/detector/CMakeLists.txt",
				"/F/SDK/Windows/test/benchmark/detector/build.sh",
				"/C/Users/intellif/Desktop/Temporary/common.h",
				"/F/SDK/Windows/test/benchmark/common/utils.h",
				"/C/Users/intellif/Desktop/demo.cpp",
				"/F/SDK/Windows/license/signature",
				"/F/code/java/src/com/xu.keze/IfTest.java",
				"/F/code/py/alg/compareresult/venv1.py",
				"/C/Users/intellif/Desktop/Temporary/demo - 副本.cpp",
				"/C/Users/intellif/Desktop/Temporary/demo [3].cpp",
				"/C/Users/intellif/AppData/Roaming/Sublime Text 3/Packages/User/javaR.sublime-build",
				"/C/Users/intellif/AppData/Roaming/Sublime Text 3/Packages/User/Python-Virtualenv.sublime-build",
				"/C/Users/intellif/AppData/Roaming/Sublime Text 3/Packages/User/PythonTestRunner.last-run",
				"/C/Users/intellif/AppData/Roaming/Sublime Text 3/Packages/User/C&C++R.sublime-build",
				"/C/Users/intellif/Desktop/Temporary/demo_bak.cpp",
				"/C/Users/intellif/Desktop/Temporary/demo.cpp.bak",
				"/F/SDK/Linux/v2.0.0/linux/test/benchmark/detector/DetectorTest.cpp",
				"/F/code/sdk/AlgTestBench_0718-windows/src/utils.h",
				"/F/SDK/Linux/v2.0.0/linux/test/benchmark/common/benchmark.h",
				"/F/code/py/alg/compareresult/base1.txt",
				"/F/code/py/alg/compareresult/test1.txt",
				"/C/Users/intellif/Desktop/build_mxnet(1).sh",
				"/C/Users/intellif/Desktop/Temporary/build_mxnet1.sh",
				"/F/code/py/alg/compareresult/comp1.txt",
				"/F/code/py/alg/compareresult/hat.log",
				"/F/code/py/alg/compareresult/no+hatlog.txt",
				"/C/Users/intellif/Desktop/Temporary/SearcherTest.cpp",
				"/F/SDK/Linux/v2.1.0/rc0/benchmark原始/common/utils.cpp"
			],
			"find":
			{
				"height": 27.0
			},
			"find_in_files":
			{
				"height": 128.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"text_size",
					"TYPE1",
					"Parameter",
					"detect_face",
					"%test_case%",
					"1920",
					"1080",
					"[",
					"bbox",
					"name",
					"d",
					"ignore",
					"ing",
					"ingr",
					"ingo",
					"ing",
					"bbox",
					"int",
					"↵",
					"fname",
					"cv2",
					"getbbox",
					"file",
					"不像",
					"parse_rec",
					"voc_ap",
					"parse_rec",
					"voc_ap",
					"xmlPath",
					"537",
					"速度",
					"44 页",
					"速度太快了，休息一下吧 暂停1秒后继续",
					" 蓝桥杯",
					" &&蓝桥杯",
					"43页",
					"43",
					"速度",
					"10",
					"500",
					"100",
					"1000",
					"5000",
					"100000",
					"500000",
					"test_case4",
					"com.intellif.file",
					"\\",
					"printcolor",
					"o",
					"printcolor",
					"ExtractFeature",
					"\\",
					"100000",
					"det",
					"base_feat",
					"parse_rec",
					"voc_eval",
					".jpg",
					"  ",
					",",
					"========================================================================\n",
					"../test_img/person/",
					"20180427T184207_522.",
					"20180511T183503_21239.",
					"20180511T183503_21239.jpg",
					"zhuxiaochun",
					"base_image_path",
					"IMREAD",
					"imread",
					"IMREAD",
					"imread",
					"IMREAD",
					"imread",
					"IMREAD",
					"imread",
					" )",
					"( ",
					"name",
					"image1",
					"image",
					"image_path",
					"\\",
					"20180510T120701_19604.jpg",
					"957",
					"zhuxiaochun_quanshen",
					"184",
					"1361",
					"1121",
					"zhuxiaochun_quanshen",
					"vector<string",
					"persons",
					"i",
					"persons",
					"cv::",
					"name",
					"with",
					"voc_ap",
					"parse_rec",
					"astyp1e",
					"difficult",
					"ditticult",
					"\\",
					"1000000",
					"rk_create",
					"password",
					"username",
					"21",
					"20",
					"test_case",
					"3",
					"\\",
					"text",
					"21",
					"1 data",
					"1",
					"-",
					"Accept",
					"name",
					":",
					"detections",
					"split",
					"out_image_path",
					"in_image_path",
					"demo",
					"showAllFiles",
					"demo",
					"compare"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"/",
					"",
					" ",
					"",
					".jpg",
					"",
					"120",
					"AlgTestBenchR"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "F:\\code\\py"
				},
				{
					"path": "F:\\code\\sdk"
				},
				{
					"path": "F:\\code\\java\\src"
				},
				{
					"path": "F:\\code\\c++"
				}
			],
			"groups":
			[
				{
					"selected": 5,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/F/SDK/Windows/v2.1.2/rc1/run64.bat",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2930,
								"regions":
								{
								},
								"selection":
								[
									[
										1427,
										1427
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.clone": -1,
									"bracket_highlighter.clone_locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.clone_regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"origin_encoding": "ASCII",
									"syntax": "Packages/Batch File/Batch File.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 378.0,
								"zoom_level": 1.0
							},
							"stack_index": 6,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/C/Users/intellif/Desktop/Temporary/demo.cpp",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 5956,
								"regions":
								{
								},
								"selection":
								[
									[
										3439,
										3439
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.clone": -1,
									"bracket_highlighter.clone_locations":
									{
										"close":
										{
											"1":
											[
												1968,
												1969
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/round_bracket.png",
												"region.yellowish"
											]
										},
										"open":
										{
											"1":
											[
												1918,
												1919
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.clone_regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"bracket_highlighter.locations":
									{
										"close":
										{
											"1":
											[
												3456,
												3457
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/round_bracket.png",
												"region.yellowish"
											]
										},
										"open":
										{
											"1":
											[
												3293,
												3294
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"origin_encoding": "ASCII",
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 1080.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "//192.168.2.243/e/intellif/SDK/Windows/win32/test/benchmark/predictor/PredictorTest.cpp",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 6962,
								"regions":
								{
								},
								"selection":
								[
									[
										2211,
										2211
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.clone": -1,
									"bracket_highlighter.clone_locations":
									{
										"close":
										{
											"1":
											[
												2226,
												2227
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/curly_bracket.png",
												"region.purplish"
											]
										},
										"open":
										{
											"1":
											[
												1683,
												1684
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.clone_regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"bracket_highlighter.locations":
									{
										"close":
										{
											"1":
											[
												2226,
												2227
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/curly_bracket.png",
												"region.purplish"
											]
										},
										"open":
										{
											"1":
											[
												1683,
												1684
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"in_converting": true,
									"origin_encoding": "GB2312",
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 1026.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/C/Users/intellif/Desktop/Temporary/arctern_manager.h",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 10553,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.clone": -1,
									"bracket_highlighter.clone_locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
											"1":
											[
												273,
												274
											]
										}
									},
									"bracket_highlighter.clone_regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"origin_encoding": "ASCII",
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/C/Users/intellif/Desktop/baiduPan.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1742,
								"regions":
								{
								},
								"selection":
								[
									[
										306,
										306
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.clone": -1,
									"bracket_highlighter.clone_locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.clone_regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 5,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 312,
								"regions":
								{
								},
								"selection":
								[
									[
										312,
										312
									]
								],
								"settings":
								{
									"auto_complete": true,
									"auto_complete_triggers":
									[
										{
											"characters": ".",
											"selector": "source.python - string - comment - constant.numeric"
										},
										{
											"characters": ".",
											"selector": "source.python - string - constant.numeric"
										}
									],
									"auto_indent": false,
									"bracket_highlighter.busy": false,
									"bracket_highlighter.clone": -1,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"default_dir": "C:\\Users\\intellif\\Desktop",
									"detect_indentation": false,
									"gutter": false,
									"history_arrows": true,
									"indent_subsequent_lines": false,
									"line_numbers": false,
									"repl": true,
									"repl_external_id": "python",
									"repl_id": "e39969e83ff14b56a648087d70ff1c13",
									"repl_restart_args":
									{
										"cmd":
										[
											"python",
											"-u",
											"$file_basename"
										],
										"cwd": "$file_path",
										"encoding": "utf8",
										"extend_env":
										{
											"PYTHONIOENCODING": "utf-8"
										},
										"external_id": "python",
										"syntax": "Packages/Python/Python.tmLanguage",
										"type": "subprocess"
									},
									"repl_sublime2": false,
									"smart_indent": false,
									"spell_check": false,
									"syntax": "Packages/Python/Python.tmLanguage",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 6,
							"file": "/F/Alg/hkperson.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 3592,
								"regions":
								{
								},
								"selection":
								[
									[
										2127,
										2130
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.clone": -1,
									"bracket_highlighter.clone_locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.clone_regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"bracket_highlighter.locations":
									{
										"close":
										{
											"1":
											[
												2144,
												2145
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/round_bracket.png",
												"region.yellowish"
											]
										},
										"open":
										{
											"1":
											[
												2050,
												2051
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"origin_encoding": "ASCII",
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 1080.0,
								"zoom_level": 1.0
							},
							"stack_index": 5,
							"type": "text"
						},
						{
							"buffer": 7,
							"file": "/F/code/py/getImg/1_1.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 6482,
								"regions":
								{
								},
								"selection":
								[
									[
										1138,
										1138
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.clone": -1,
									"bracket_highlighter.clone_locations":
									{
										"close":
										{
											"1":
											[
												1137,
												1138
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/square_bracket.png",
												"region.bluish"
											]
										},
										"open":
										{
											"1":
											[
												1122,
												1123
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.clone_regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"bracket_highlighter.locations":
									{
										"close":
										{
											"1":
											[
												1137,
												1138
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/square_bracket.png",
												"region.bluish"
											]
										},
										"open":
										{
											"1":
											[
												1122,
												1123
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"is_init_dirty_state": false,
									"origin_encoding": "UTF-8",
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 108.0,
								"zoom_level": 1.0
							},
							"stack_index": 7,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 27.0
			},
			"input":
			{
				"height": 51.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.autopep8":
			{
				"height": 149.0
			},
			"output.exec":
			{
				"height": 240.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,2,3,-32000,-32000,-1,-1,824,476,114,1536",
			"project": "",
			"replace":
			{
				"height": 50.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"Iou",
						"F:\\Alg\\Iou.py"
					],
					[
						"",
						"F:\\Alg\\screenshot - 副本.py"
					],
					[
						"screen",
						"F:\\Alg\\screenshot - 副本.py"
					],
					[
						"scr",
						"F:\\Alg\\screenshot - 副本.py"
					],
					[
						"1",
						"py\\getImg\\1_1.py"
					],
					[
						"mul",
						"py\\getSamples\\getPicture_Multithreading.py"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 264.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 13,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
