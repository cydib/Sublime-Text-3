{
	"folder_history":
	[
	],
	"last_version": 3211,
	"last_window_id": 5,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 1075.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
				]
			},
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"install",
						"Package Control: Install Package"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 617.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
			],
			"find":
			{
				"height": 28.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"需等接口文档确定入参后整理"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 28.0
			},
			"input":
			{
				"height": 0.0
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 52.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 150.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 1792.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
				]
			},
			"buffers":
			[
				{
					"contents": "目标解析相关的worker: 三种\nhttp://viper.pages.gitlab.sz.sensetime.com/engine-public-apis 接口文档  FaceExtractService、StructExtractService\t\nworker-face：同步+异步  针对人脸\n\t同步接口： FaceExtractService\n\t异步：从上层的kafka topic（stream.images.face）消费请求，处理之后，推送到下游的topic(stream.features.face_feature_version/stream.features.ips.face_feature_version.garbage)\n\nworker-pach： 同步+异步   针对四种目标： 机动车，非机动车，骑手，人体\n\t同步：StructExtractService\t\n\t异步：从上层的kafka topic（不同类型的目标，topic不一样）消费请求，处理之后，推送到下游的topic(不同目标类型topic不一样)\n                              请求 topic:\n\t\t\"stream.images.pedestrian\", \"stream.images.automobile\", \"stream.images.cyclist\",\n                                \"stream.images.human_powered_vehicle\"\t\n                             结果topic:\n                                   (\"stream.features.pedestrian_\" + feature_version, f\"stream.features.ips.pedestrian_{feature_version}.garbage\"),\n                                   (\"stream.features.automobile\", \"stream.features.ips.automobile.garbage\"),\n                                   (\"stream.features.cyclist\", \"stream.features.ips.cyclist.garbage\"),\n                                   (\"stream.features.human_powered_vehicle\", \"stream.features.ips.human_powered_vehicle.garbage\")\n\nworker-captureforfaceped：v3.1新增的worker(针对异步)   v3.2新增同步接口 \n                                请求 topic: steam.images.face_pedestrian\n                                结果topic:\n                                \n\t\t\t人脸：stream.features.face_feature_version/stream.features.ips.face_feature_version.garbag\n\t\t\t人体： \"stream.features.pedestrian_\" + feature_version, f\"stream.features.ips.pedestrian_{feature_version}.garbage\n\ngarbage: 未检测到指定目标或者目标质量分数(v3.1之前只有人脸涉及; v3.2之后加了人体质量分数)小于阈值\n\nworker-featureconvert\nworker-symphonyface-cpu\n\n\n\n包装器：只有同步接口  FaceAPIWrapper   v3.2之前都是针对的人脸相关的 \n            将多个组件的同步接口合成自己的一个接口\n   \n\n      ",
					"file": "/Users/xukeze/project/IPS.txt",
					"file_size": 2074,
					"file_write_time": 132471212360000000,
					"settings":
					{
						"buffer_size": 1804,
						"line_ending": "Windows",
						"scratch": true
					}
				},
				{
					"contents": "版本研发：\n      v3.2 process ips功能版本测试:\n1. 3.2 ips需求分解  100%\n2. Process 模块测试功能、测试方案熟悉 60%\n3. 梳理ips新功能测试点  100%\n4. 整理ips所需素材  0% 需等接口文档确定入参后整理\n5. ips人脸人体同步接口测试脚本开发 0% 需等接口文档确定入参后整理\n专题验证&项目支持：\n无\n团队建设：\n无\n问题和风险：\n无\n\n\n\n2020-10-23\n版本研发：\n      v3.2 process ips功能版本整体测试:\n1. Process 模块测试功能、测试方案熟悉 100%\n2. 整理ips人脸人体同步接口测试所需素材  70% 与测试用例脚本开发同步\n3. ips人脸人体同步接口测试脚本开发和调试 70% 与测试用例脚本开发同步\n4. 协助修改ips业务流用例bug并验证 100%\n\n专题验证&项目支持：\n无\n团队建设：\n参加新员工入职培训\n问题和风险：\n无",
					"settings":
					{
						"buffer_size": 433,
						"line_ending": "Unix",
						"name": "版本研发："
					}
				},
				{
					"contents": "{\n  'results': [{\n    'code': 0,\n    'error': '',\n    'status': 'OK'\n  }],\n  'responses': [{\n    'face': {\n      'object_info': {\n        'type': 'OBJECT_FACE',\n        'face': {\n          'quality': 0,\n          'rectangle': {\n            'vertices': [{\n              'x': 510,\n              'y': 300\n            }, {\n              'x': 606,\n              'y': 390\n            }]\n          },\n          'track_id': '0',\n          'angle': {\n            'yaw': 4.315368,\n            'pitch': -0.27277043,\n            'roll': 6.706607\n          },\n          'landmarks': [{\n            'x': 506,\n            'y': 313\n          }, {\n            'x': 506,\n            'y': 319\n          }, {\n            'x': 507,\n            'y': 325\n          }, {\n            'x': 508,\n            'y': 331\n          }, {\n            'x': 510,\n            'y': 337\n          }, {\n            'x': 512,\n            'y': 342\n          }, {\n            'x': 515,\n            'y': 348\n          }, {\n            'x': 518,\n            'y': 353\n          }, {\n            'x': 521,\n            'y': 358\n          }, {\n            'x': 525,\n            'y': 363\n          }, {\n            'x': 529,\n            'y': 367\n          }, {\n            'x': 533,\n            'y': 370\n          }, {\n            'x': 538,\n            'y': 374\n          }, {\n            'x': 544,\n            'y': 377\n          }, {\n            'x': 549,\n            'y': 379\n          }, {\n            'x': 555,\n            'y': 381\n          }, {\n            'x': 561,\n            'y': 381\n          }, {\n            'x': 567,\n            'y': 380\n          }, {\n            'x': 574,\n            'y': 378\n          }, {\n            'x': 579,\n            'y': 375\n          }, {\n            'x': 584,\n            'y': 371\n          }, {\n            'x': 589,\n            'y': 367\n          }, {\n            'x': 593,\n            'y': 362\n          }, {\n            'x': 597,\n            'y': 356\n          }, {\n            'x': 600,\n            'y': 351\n          }, {\n            'x': 602,\n            'y': 346\n          }, {\n            'x': 604,\n            'y': 340\n          }, {\n            'x': 605,\n            'y': 333\n          }, {\n            'x': 605,\n            'y': 327\n          }, {\n            'x': 606,\n            'y': 321\n          }, {\n            'x': 606,\n            'y': 315\n          }, {\n            'x': 605,\n            'y': 308\n          }, {\n            'x': 604,\n            'y': 302\n          }, {\n            'x': 513,\n            'y': 297\n          }, {\n            'x': 518,\n            'y': 291\n          }, {\n            'x': 525,\n            'y': 289\n          }, {\n            'x': 532,\n            'y': 288\n          }, {\n            'x': 539,\n            'y': 290\n          }, {\n            'x': 557,\n            'y': 287\n          }, {\n            'x': 564,\n            'y': 285\n          }, {\n            'x': 571,\n            'y': 283\n          }, {\n            'x': 579,\n            'y': 284\n          }, {\n            'x': 586,\n            'y': 288\n          }, {\n            'x': 550,\n            'y': 302\n          }, {\n            'x': 551,\n            'y': 309\n          }, {\n            'x': 551,\n            'y': 316\n          }, {\n            'x': 552,\n            'y': 323\n          }, {\n            'x': 543,\n            'y': 334\n          }, {\n            'x': 548,\n            'y': 335\n          }, {\n            'x': 554,\n            'y': 334\n          }, {\n            'x': 559,\n            'y': 333\n          }, {\n            'x': 565,\n            'y': 332\n          }, {\n            'x': 520,\n            'y': 306\n          }, {\n            'x': 524,\n            'y': 303\n          }, {\n            'x': 534,\n            'y': 302\n          }, {\n            'x': 538,\n            'y': 306\n          }, {\n            'x': 534,\n            'y': 308\n          }, {\n            'x': 524,\n            'y': 308\n          }, {\n            'x': 564,\n            'y': 303\n          }, {\n            'x': 566,\n            'y': 299\n          }, {\n            'x': 577,\n            'y': 296\n          }, {\n            'x': 582,\n            'y': 299\n          }, {\n            'x': 578,\n            'y': 301\n          }, {\n            'x': 569,\n            'y': 304\n          }, {\n            'x': 519,\n            'y': 295\n          }, {\n            'x': 526,\n            'y': 293\n          }, {\n            'x': 532,\n            'y': 293\n          }, {\n            'x': 539,\n            'y': 294\n          }, {\n            'x': 557,\n            'y': 291\n          }, {\n            'x': 564,\n            'y': 289\n          }, {\n            'x': 572,\n            'y': 288\n          }, {\n            'x': 579,\n            'y': 288\n          }, {\n            'x': 529,\n            'y': 301\n          }, {\n            'x': 529,\n            'y': 308\n          }, {\n            'x': 529,\n            'y': 305\n          }, {\n            'x': 571,\n            'y': 296\n          }, {\n            'x': 574,\n            'y': 303\n          }, {\n            'x': 572,\n            'y': 300\n          }, {\n            'x': 544,\n            'y': 304\n          }, {\n            'x': 557,\n            'y': 303\n          }, {\n            'x': 542,\n            'y': 323\n          }, {\n            'x': 563,\n            'y': 321\n          }, {\n            'x': 539,\n            'y': 331\n          }, {\n            'x': 568,\n            'y': 328\n          }, {\n            'x': 539,\n            'y': 353\n          }, {\n            'x': 544,\n            'y': 348\n          }, {\n            'x': 551,\n            'y': 344\n          }, {\n            'x': 555,\n            'y': 344\n          }, {\n            'x': 559,\n            'y': 343\n          }, {\n            'x': 566,\n            'y': 345\n          }, {\n            'x': 573,\n            'y': 348\n          }, {\n            'x': 568,\n            'y': 352\n          }, {\n            'x': 563,\n            'y': 355\n          }, {\n            'x': 557,\n            'y': 357\n          }, {\n            'x': 550,\n            'y': 357\n          }, {\n            'x': 544,\n            'y': 356\n          }, {\n            'x': 541,\n            'y': 353\n          }, {\n            'x': 548,\n            'y': 351\n          }, {\n            'x': 556,\n            'y': 350\n          }, {\n            'x': 563,\n            'y': 349\n          }, {\n            'x': 570,\n            'y': 349\n          }, {\n            'x': 563,\n            'y': 349\n          }, {\n            'x': 556,\n            'y': 350\n          }, {\n            'x': 548,\n            'y': 351\n          }, {\n            'x': 529,\n            'y': 305\n          }, {\n            'x': 572,\n            'y': 300\n          }],\n          'attributes': {\n            'age_lower_limit': '27.000000',\n            'age_up_limit': '37.000000',\n            'black_type': 'st_brown',\n            'cap_style': 'hat_style_type_none',\n            'gender_code': 'male',\n            'glass_style': 'glasses_style_type_none',\n            'mustache_style': 'whiskers',\n            'respirator_color': 'color_type_none',\n            'st_age': 'st_adult',\n            'st_age_value': '32.000000',\n            'st_expression': 'st_happy',\n            'st_helmet_style': 'st_helmet_style_type_none'\n          },\n          'attributes_with_score': {\n            'age_lower_limit': {\n              'type': 'DISCRIMINATION',\n              'category': 'age_lower_limit',\n              'value': 27,\n              'roi': None\n            },\n            'age_up_limit': {\n              'type': 'DISCRIMINATION',\n              'category': 'age_up_limit',\n              'value': 37,\n              'roi': None\n            },\n            'cap_style': {\n              'type': 'CLASSIFICATION',\n              'category': 'HAT_STYLE_TYPE_NONE',\n              'value': 0.9658029,\n              'roi': None\n            },\n            'gender_code': {\n              'type': 'CLASSIFICATION',\n              'category': 'MALE',\n              'value': 0.9934991,\n              'roi': None\n            },\n            'glass_style': {\n              'type': 'CLASSIFICATION',\n              'category': 'GLASSES_STYLE_TYPE_NONE',\n              'value': 0.747827,\n              'roi': None\n            },\n            'mustache_style': {\n              'type': 'CLASSIFICATION',\n              'category': 'WHISKERS',\n              'value': 0.99988943,\n              'roi': None\n            },\n            'respirator_color': {\n              'type': 'CLASSIFICATION',\n              'category': 'COLOR_TYPE_NONE',\n              'value': 0.99880975,\n              'roi': None\n            },\n            'st_age': {\n              'type': 'CLASSIFICATION',\n              'category': 'ST_ADULT',\n              'value': 1,\n              'roi': None\n            },\n            'st_expression': {\n              'type': 'CLASSIFICATION',\n              'category': 'ST_HAPPY',\n              'value': 0.27071148,\n              'roi': None\n            },\n            'st_helmet_style': {\n              'type': 'CLASSIFICATION',\n              'category': 'ST_HELMET_STYLE_TYPE_NONE',\n              'value': 0.99746895,\n              'roi': None\n            }\n          },\n          'face_score': 0\n        },\n        'pedestrian': None,\n        'automobile': None,\n        'human_powered_vehicle': None,\n        'cyclist': None,\n        'scenario': None,\n        'crowd': None,\n        'event': None,\n        'portrait_image_location': None,\n        'object_id': '',\n        'associations': [],\n        'algo': None\n      },\n      'feature': {\n        'type': 'face',\n        'version': 24901,\n        'blob': 'U09GMUVhAAAAAgAAAAEAAAAAAAABAAAAAAAAAAAAAAAuLV2kf6Hiq4eoQaNHI1yrNyhoJK0khSx1HhktjSo7JGKsYZnIKf4qFS0trqCtvKkiKhEt46wlJLktGjDfniGhoqbDr3Yl5ys2pziosCfTMGiuWSQFrOssa6nJpcAq9Z/6oVYlM61xrE+mCquILEQpRSokr1wp8SocKzSsuDJWLKitaCIYJCCoQKipJgeVBpoWLh+qoB9UpT4ocSwgINshUyKWpT4p/69AoOssZrCTq70qZSsPoakeM6gjqEcm3p5pqqYt5SbGJ+4q2iawrQMx6yedn7emHqLPqMWp0jCtrCSp1CPqJxcjjSjLqyiwcKl2rw2u8alRrRSmjiyLrjKgFa3vKXelOh5ILNqknapBIXysvKHxqBOj86tCKnAwti3KsLCeFyFRHTQoaaxEINqqx6Y3FASls5lfreasXqiJIziuLSu6MGicTK8opGGXCSqCpZKnrayiqBoo+iZlIzmjnqwXsIcpPSJXLRegfq8QKBWssiVXJnQjPKs2Hl0PK67RqIGigaFYrHCoha5fKhCv7yvLq0CZwauLKG+rMKScLB+sD6wVHw2pljBiJQspNqzyK3amuiufrrksyCo9mSce2yO7LVEleazmH64f3SYwJQOtu653KRgoCi5SLT6WhihCoE0RcalapEwg+6iDKAAsYi06siatoCturmUjka/Mpg=='\n      }\n    }\n  }]\n}",
					"settings":
					{
						"buffer_size": 10395,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "component;\nconsole;\ninfra - model - manager;\nengine - algoapp - ips - operator;\nengine - algoapp - vps - operator;\nengine - image - process - service;\nengine - video - process - service;\nengine - batch - video - process - service;\nengine - process - callback - service\n\n\n\ncomponent;\nconsole;\ninfra - model - manager;\nengine - algoapp - ips - operator;\nengine - algoapp - vps - operator;\nengine - video - ingress - service;\nengine - image - process - service;\nengine - video - process - service;\nengine - batch - video - process - service;\nengine - process - callback - service",
					"settings":
					{
						"buffer_size": 576,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"install",
						"Package Control: Install Package"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 617.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
			],
			"find":
			{
				"height": 28.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"需等接口文档确定入参后整理"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"selected": 1,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Users/xukeze/project/IPS.txt",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1804,
								"regions":
								{
								},
								"selection":
								[
									[
										1804,
										1804
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content"
									],
									"in_converting": true,
									"is_init_dirty_state": false,
									"origin_content": "目标解析相关的worker: 三种\nhttp://viper.pages.gitlab.sz.sensetime.com/engine-public-apis 接口文档  FaceExtractService、StructExtractService\t\nworker-face：同步+异步  针对人脸\n\t同步接口： FaceExtractService\n\t异步：从上层的kafka topic（stream.images.face）消费请求，处理之后，推送到下游的topic(stream.features.face_feature_version/stream.features.ips.face_feature_version.garbage)\n\nworker-pach： 同步+异步   针对四种目标： 机动车，非机动车，骑手，人体\n\t同步：StructExtractService\t\n\t异步：从上层的kafka topic（不同类型的目标，topic不一样）消费请求，处理之后，推送到下游的topic(不同目标类型topic不一样)\n                              请求 topic:\n\t\t\"stream.images.pedestrian\", \"stream.images.automobile\", \"stream.images.cyclist\",\n                                \"stream.images.human_powered_vehicle\"\t\n                             结果topic:\n                                   (\"stream.features.pedestrian_\" + feature_version, f\"stream.features.ips.pedestrian_{feature_version}.garbage\"),\n                                   (\"stream.features.automobile\", \"stream.features.ips.automobile.garbage\"),\n                                   (\"stream.features.cyclist\", \"stream.features.ips.cyclist.garbage\"),\n                                   (\"stream.features.human_powered_vehicle\", \"stream.features.ips.human_powered_vehicle.garbage\")\n\nworker-captureforfaceped：v3.1新增的worker(针对异步)   v3.2新增同步接口 \n                                请求 topic: steam.images.face_pedestrian\n                                结果topic:\n                                \n\t\t\t人脸：stream.features.face_feature_version/stream.features.ips.face_feature_version.garbag\n\t\t\t人体： \"stream.features.pedestrian_\" + feature_version, f\"stream.features.ips.pedestrian_{feature_version}.garbage\n\ngarbage: 未检测到指定目标或者目标质量分数(v3.1之前只有人脸涉及; v3.2之后加了人体质量分数)小于阈值\n\nworker-featureconvert\nworker-symphonyface-cpu\n\n\n\n包装器：只有同步接口  FaceAPIWrapper   v3.2之前都是针对的人脸相关的 \n            将多个组件的同步接口合成自己的一个接口\n   \n\n      ",
									"origin_encoding": "GB2312",
									"syntax": "Packages/Text/Plain text.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 1,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 433,
								"regions":
								{
								},
								"selection":
								[
									[
										433,
										209
									]
								],
								"settings":
								{
									"auto_name": "版本研发：",
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content"
									],
									"is_init_dirty_state": true,
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 2,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 10395,
								"regions":
								{
								},
								"selection":
								[
									[
										46,
										50
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
											"1":
											[
												71,
												72
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/curly_bracket.png",
												"region.purplish"
											]
										},
										"open":
										{
											"1":
											[
												16,
												17
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content"
									],
									"is_init_dirty_state": true,
									"syntax": "Packages/JavaScript/JSON.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 3,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 576,
								"regions":
								{
								},
								"selection":
								[
									[
										282,
										282
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content"
									],
									"syntax": "Packages/JavaScript/JSON.sublime-syntax",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 28.0
			},
			"input":
			{
				"height": 0.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 0 1792 1097 0 0 1792 1097 ",
			"project": "",
			"replace":
			{
				"height": 52.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 150.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 3,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
